global:
  # The default SMTP From header field.
  smtp_from: 'info@example.com'
  # The default SMTP smarthost used for sending emails, including port number.
  # Port number usually is 25, or 587 for SMTP over TLS (sometimes referred to as STARTTLS).
  # Example: smtp.example.org:587
  smtp_smarthost: 'example.com:587'
  # The default hostname to identify to the SMTP server.
  # [ smtp_hello: <string> | default = "localhost" ]
  # SMTP Auth using CRAM-MD5, LOGIN and PLAIN. If empty, Alertmanager doesn't authenticate to the SMTP server.
  smtp_auth_username: ''
  # SMTP Auth using LOGIN and PLAIN.
  smtp_auth_password: ''
  # SMTP Auth using PLAIN.
  smtp_auth_identity: ''
  # [ smtp_auth_identity: <string> ]
  # SMTP Auth using CRAM-MD5.
  smtp_auth_secret: ''
  # [ smtp_auth_secret: <secret> ]
  # The default SMTP TLS requirement.
  # Note that Go does not support unencrypted connections to remote SMTP endpoints.
  smtp_require_tls: false

route:
  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 10s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 30s

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 30m

  # A default receiver
  receiver: "email"

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  # routes:
    # - receiver: "slack"
    #   group_wait: 10s
    #   match_re:
    #     severity: critical|warning
    #   continue: true

    # - receiver: "pager"
    #   group_wait: 10s
    #   match_re:
    #     severity: critial
    #   continue: true

# https://prometheus.io/docs/alerting/latest/configuration/#email_config

receivers:
  # - name: 'email'
  #   email_configs:
  #   - to: 'info@example.com'
  #     from: 'alert@example.com'

  # - name: "slack"
  #   slack_configs:
  #     - api_url: 'https://hooks.slack.com/services/XXXXXXXXX/XXXXXXXXX/xxxxxxxxxxxxxxxxxxxxxxxxxxx'
  #       send_resolved: true
  #       channel: 'monitoring'
  #       text: "{{ range .Alerts }}<!channel> {{ .Annotations.summary }}\n{{ .Annotations.description }}\n{{ end }}"

  # - name: "pager"
  #   webhook_configs:
  #     - url: http://a.b.c.d:8080/send/sms
  #       send_resolved: true
